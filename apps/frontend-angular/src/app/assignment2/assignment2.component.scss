// src/app/assignment2/assignment2.component.scss
:host ::ng-deep { // Use ::ng-deep sparingly or configure ViewEncapsulation.None
  .p-dataview {
    .p-dataview-header {
      background-color: var(--surface-b);
      border-bottom: 1px solid var(--surface-d);
    }
    // Make grid items take full height within their row
    .p-dataview-content > .grid > div[class*="col-"] {
      display: flex; // Enable flexbox for children
      > .assignment-card {
        width: 100%; // Card takes full width of its column
        display: flex; // Card itself is a flex container
        flex-direction: column; // Stack content vertically
      }
    }
  }
}

.assignment2-container {
  h3 {
    color: var(--text-color);
  }
}

.assignment-card {
  display: flex;
  flex-direction: column;
  height: 100%; // Make card take full height of its grid cell
  background-color: var(--surface-a); // Card background

  .card-header {
    border-bottom: 1px solid var(--surface-d);
    h5 { margin-bottom: 0.25rem; }
  }

  .p-tabview.tabview-condensed {
    flex-grow: 1; // Allow tabview to take available space
    display: flex;
    flex-direction: column;

    .p-tabview-nav-container {
      flex-shrink: 0; /* Prevent nav from shrinking */
    }
    .p-tabview-panels {
      flex-grow: 1;
      overflow-y: auto; // If content inside panels overflows
      padding: 0 !important; // Remove default panel padding if details-grid has its own
    }
    .p-tabview-nav li .p-tabview-nav-link {
      padding: 0.65rem 1rem;
      font-size: 0.9rem;
    }
  }

  .details-grid {
    display: grid;
    grid-template-columns: 1fr; // Single column for details for simplicity, adjust as needed
    gap: 0.6rem;
    font-size: 0.85rem;
    word-break: break-word; // Prevent long text from breaking layout
    > div { padding: 3px 0; }
  }

  .user-info-line {
    display: flex;
    align-items: center;
    gap: 0.35rem;
    .user-avatar {
      width: 22px !important;
      height: 22px !important;
      font-size: 0.75rem !important;
      background-color: var(--surface-c);
      color: var(--text-color);
    }
    .p-button.p-button-sm.p-button-rounded.p-button-text {
      width: 1.6rem;
      height: 1.6rem;
    }
  }

  .tags-container {
    margin-top: 0.25rem;
    p-tag {
      margin-right: 0.25rem;
      margin-bottom: 0.25rem;
      font-size: 0.75rem;
    }
  }

  .exercice-content {
    max-height: 180px;
    overflow-y: auto;
    font-size: 0.85rem;
    word-wrap: break-word;
    p { margin-bottom: 0.5rem; }
  }

  .card-footer {
    border-top: 1px solid var(--surface-d);
    margin-top: auto; /* Pushes footer to bottom */
    flex-shrink: 0;
  }
}

// PrimeFlex classes would be better for grid system if available
// Simple fallback for grid column classes if not using PrimeFlex
.p-dataview-content > .grid { // Assuming this is the direct child after .p-dataview-content
  display: flex;
  flex-wrap: wrap;
  margin-right: -0.5rem; // Negative margin for gutter
  margin-left: -0.5rem;  // Negative margin for gutter
}

.col-12, .md\:col-6, .lg\:col-4, .xl\:col-3 {
  padding-right: 0.5rem; // Gutter
  padding-left: 0.5rem;  // Gutter
  box-sizing: border-box;
}

.col-12 { width: 100%; }
@media (min-width: 768px) { .md\:col-6 { width: 50%; } }
@media (min-width: 992px) { .lg\:col-4 { width: 33.3333%; } }
@media (min-width: 1200px) { .xl\:col-3 { width: 25%; } }

// src/app/assignment2/assignment2.component.scss
.assignment2-container {
  h3 {
    color: var(--text-color);
  }
}

// Styling for cells containing user info + avatar + button
.user-info-cell {
  display: flex;
  align-items: center;
  gap: 0.5rem; // Space between avatar, name, button

  .p-avatar-sm { // If you use size="small" on p-avatar
    width: 24px !important;
    height: 24px !important;
    font-size: 0.8rem !important;
  }

  .p-button.p-button-sm.p-button-rounded.p-button-text {
    width: 1.75rem;
    height: 1.75rem;
  }
}

.actions-cell {
  display: flex;
  gap: 0.5rem;
  justify-content: center; // Or flex-start, flex-end as preferred
}

// Ensure table headers are aligned well
:host ::ng-deep .p-datatable .p-datatable-thead > tr > th {
  text-align: left; // Or center, as you prefer
  vertical-align: middle;
}

:host ::ng-deep .p-datatable .p-datatable-tbody > tr > td {
  vertical-align: middle;
  word-break: break-word; // Prevent long text from breaking layout too much
}
